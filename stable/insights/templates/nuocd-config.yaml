{{/* vim: set filetype=mustache: */}}

{{/* -- Install nuocd configmaps if labels exists and nuocd is enabled  -- */}}
{{ if (hasKey .Values.insights "nuocollector") }}
{{ if not (empty .Values.insights.nuocollector)  }}
{{ if .Values.insights.nuocollector.enabled  }}

{{/* -- Install influx output plugin, if influx is enabled or influx is referenced. -- */}}

{{- if and .Values.influxdb (or .Values.influxdb.enabled .Values.influxdb.host) -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nuocollector-{{ $.Release.Name }}-influxdb
  namespace: {{ $.Release.Namespace }}
  labels:
    "nuodb.com/nuocollector-plugin": "insights"
data:
  influxdb.conf: |-
    [[ outputs.influxdb ]]
      urls = [ {{ include "insights.influxdb_url" $ | quote }} ]
      database = "telegraf"
      database_tag = "db_tag"
      exclude_database_tag = true
      ## Retention policy to write to. Empty string writes to the default rp.
      retention_policy = ""
      ## Write consistency (clusters only), can be: "any", "one", "quorum", "all"
      write_consistency = "any"
      ## Write timeout (for the InfluxDB client), formatted as a string.
      ## If not provided, will default to 5s. 0s means no timeout (not recommended).
      timeout = "5s"
{{- end }}

{{- if .Values.insights.nuocollector.extensions }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nuocollector-{{ $.Release.Name }}-extensions
  namespace: {{ $.Release.Namespace }}
  labels:
    "nuodb.com/nuocollector-plugin": "insights"
data:
  {{- toYaml .Values.insights.nuocollector.extensions | nindent 2 }}
{{- end }}

{{ end }}
{{ end }}
{{- end }}
