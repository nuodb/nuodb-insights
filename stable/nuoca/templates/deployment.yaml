apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nuoca.fullname" . }}
  labels:
    {{- include "nuoca.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "nuoca.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "nuoca.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "nuoca.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          args: [ "nuoca", "--no-verify", "start" , "nuoca", "--collection-interval", "10" ]
          env:
          - name: NUOCMD_API_SERVER
            value: {{ include "nuoca.nuodb_api_server" . }}
          {{- if and .Values.nuoadmin.tls .Values.nuoadmin.tls.enabled }}
          - name: NUOCMD_CLIENT_KEY
            value: /etc/nuodb/keys/nuocmd.pem
          {{- end }}
          {{- if and .Values.nuoagent .Values.nuoagent.enabled }}
          {{- if (not .Values.env.DOMAIN_BROKER) }}
          - name: DOMAIN_BROKER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.nuoagent.existingSecret | default (include "nuoca.fullname" .) }}
                key: {{ .Values.nuoagent.domainBrokerKey | default "domain-broker" }}
          {{- end }}
          {{- if (not .Values.env.DOMAIN_USER) }}
          - name: DOMAIN_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.nuoagent.existingSecret | default (include "nuoca.fullname" .) }}
                key: {{ .Values.nuoagent.domainUserKey | default "domain-user" }}
          {{- end }}
          {{- if (not .Values.env.DOMAIN_PASSWORD) }}
          - name: DOMAIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.nuoagent.existingSecret | default (include "nuoca.fullname" .) }}
                key:  {{ .Values.nuoagent.domainPasswordKey | default "domain-password" }}
          {{- end }}
          {{- end }}
          - name: INFLUXDB_URL
            value: {{ include "nuoca.influxdb_url" . }}/write?db={{ default "nuodb" .Values.influxdb.dbname }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: config-volume
            mountPath: /etc/nuodb/nuoca.yml.template
            subPath: nuoca.yml.template
          {{- if and .Values.nuoadmin.tls .Values.nuoadmin.tls.enabled .Values.nuoadmin.tls.key }}
          - name: tls-client-pem
            mountPath: /etc/nuodb/keys/nuocmd.pem
            subPath: {{ default .Values.nuoadmin.tls.key "nuocmd.pem" }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "nuoca.fullname" . }}-configmap
        {{- if and .Values.nuoadmin.tls .Values.nuoadmin.tls.enabled .Values.nuoadmin.tls.secret }}
        - name: tls-client-pem
          secret:
            secretName: {{ .Values.nuoadmin.tls.secret }}
            defaultMode: 0440
        {{- end }}
